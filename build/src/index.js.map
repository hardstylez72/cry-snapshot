{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import 'global-agent/bootstrap.js';\nimport * as ethers from 'ethers';\nimport {Vote} from \"@snapshot-labs/snapshot.js/dist/sign/types.js\";\nimport {getActiveProposals, getProposal,} from \"./proposal.js\";\nimport {client} from \"./client.js\";\n\nimport express, { Express, Request, Response } from 'express';\nimport dotenv from 'dotenv';\nimport bodyParser from \"body-parser\";\n\ndotenv.config();\n\nlet app: Express = express();\nconst port = process.env.PORT;\napp.use( bodyParser());       // to support JSON-encoded bodies\napp.use(bodyParser.urlencoded({     // to support URL-encoded bodies\n    extended: true\n}));\n\n\n\napp.post('/proposals/active', async (req: Request, res: Response) => {\n    console.log('/proposals/active')\n    const node = req.body.provider_rpc;\n    const space = req.body.space\n    const pk = req.body.pk\n\n    try {\n        const web3 = new ethers.providers.JsonRpcProvider(node);\n\n        const wallet = new ethers.Wallet(pk, web3)\n        const address = await wallet.getAddress();\n        await client.follow(wallet, address, {\n            space:space\n        });\n\n        const proposalIds = await getActiveProposals(space)\n\n        const proposals = []\n        for (const id of proposalIds) {\n                const p = await getProposal(id)\n                p.error = null\n                proposals.push(p)\n\n        }\n        res.statusCode = 200\n        res.send(JSON.stringify(proposals))\n    } catch (e) {\n        console.error(e)\n        res.statusCode = 500\n        res.send(JSON.stringify({error: JSON.stringify(e)}))\n    }\n});\n\napp.post('/proposal/vote', async (req: Request, res: Response) => {\n    console.log('/proposal/vote')\n    const node = req.body.provider_rpc;\n    const space = req.body.space\n    const pk = req.body.pk\n    const type = req.body.type\n    const id = req.body.proposal_id\n\n    try {\n        const web3 = new ethers.providers.JsonRpcProvider(node);\n\n        const wallet = new ethers.Wallet(pk, web3)\n        const address = await wallet.getAddress();\n\n        const vote: Vote = {\n            type: type,\n            proposal: id,\n            choice: 1,\n            space: space\n        }\n        await client.vote(wallet, address, vote).catch((err) => {\n            throw new Error('vote error:' + JSON.stringify(err))\n        })\n\n        res.statusCode = 200\n        res.send(JSON.stringify({}))\n    } catch (e) {\n        console.error(e)\n\n        res.statusCode = 500\n        res.send(JSON.stringify({error: e.message}))\n    }\n});\n\napp.on('uncaughtException', parent => {\n    console.error(parent)\n})\napp.on('error', parent => {\n    console.error(parent)\n})\napp.on('listen', parent => {\n    console.log(parent)\n})\n\napp.listen(port, () => {\n    console.log(`⚡️[server]: Server is running at http://localhost:${port}`);\n});\n\n\n\n"]}